% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{get_neighborhood_Rcpp}
\alias{get_neighborhood_Rcpp}
\title{Get neighborhood of a node (unsafe)}
\usage{
get_neighborhood_Rcpp(x, v, type, na)
}
\arguments{
\item{x}{a \code{\link[network]{network}} class object (type is not checked)}

\item{v}{a vertex ID}

\item{type}{the neighborhood to be computed}

\item{na}{logical; should missing edges be ignored when obtaining vertex neighborhoods?}
}
\description{
This \code{Rcpp} function is intended as an example of how to
use the \code{network} C API from \code{Rcpp}. Please do not use it for
actual projects as no type checking or other input checking is implemented.
}
\examples{

#Create a network with three edges
library(network)
library(networkRcppExample)
m<-matrix(0,3,3)
m[1,2]<-1; m[2,3]<-1; m[3,1]<-1
g<-network(m)

#Examine the neighborhood of vertex 1
get_neighborhood_Rcpp(g,1,"out",TRUE) # compare to get.neighborhood(g,1,"out")
get_neighborhood_Rcpp(g,1,"in",TRUE) # compare to get.neighborhood(g,1,"in")
get_neighborhood_Rcpp(g,1,"combined",TRUE) # compare to get.neighborhood(g,1,"combined")

}
